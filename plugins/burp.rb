module Burp
	class Xml

		def initialize(cli, debug)
			@plugin	 =  'Burp'
			@author  =  {
						  			 :name     => 'Tiago Ferreira',
						 				 :contact  => 'tiago at blazeinfosec.com'
									}
			@debug	 =  debug
			@cli	 =  cli
			@report  =  Reportfile.new(@cli, @debug).read_file

		end

		def generate_event()
			@debug.status "Parsing \e[36m#{@plugin}\e[0m report XML file"
			flame_issues = {}
			parse = REXML::Document.new(@report)

			begin
				report_time  = parse.elements["//issues"].attributes['exportTime']
				flame_issues = parse.elements.collect("//issues/issue") do |issue|  
			 		{
           				:name 			  	 =>  issue.elements['name'].text,
           				:url 				 =>	 issue.elements['host'].text,
            			:description		 =>  issue.elements['issueBackground'].text.gsub!(/<\/?[^>]*>/,""),
            			:fix_procedure  	 =>  issue.elements['remediationBackground'].nil? ? '' : issue.elements['remediationBackground'].text.to_s,  
            			:affected_point      =>  issue.elements['host'].text + issue.elements['path'].text, 
            			:severity 			 =>  issue.elements['severity'].text,
            			:_hash 				 =>  issue.elements['serialNumber'].text,
            			:report_time		 =>	 report_time
               		}
           		 end

           	rescue Exception => e
           		@debug.error "Somenting went wrong. Please verify if the report scanner it was generated by #{@plugin}.\n"
         		exit
           	end

            return flame_issues
        end
	end

	class Html
	end
end