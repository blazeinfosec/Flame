module Openvas
	class Xml

		def initialize(cli, debug)
      @plugin  = 'Openvas'
      @author  =  {
                     :name     => 'Tiago Ferreira',
                     :contact  => 'tiago at blazeinfosec.com'
                  }
			@debug	 = debug
			@cli	   = cli
			@report  = Reportfile.new(@cli, @debug).read_file

		end

		def generate_event()
			@debug.status "Parsing \e[36m#{@plugin}\e[0m report XML file"
			flame_issues = {}
			parse = REXML::Document.new(@report)

      begin
          report_time  = parse.elements['//report/scan_start'].text
          flame_issues = parse.elements.collect("//results/result") do |issue|  
              {
                 :_hash             => issue.attributes['id'],
                 :name              => issue.elements['nvt/name'].text,
                 :host              => issue.elements['host'].text,
                 :port              => issue.elements['port'].text,
                 :description       => issue.elements['description'].text,
                 :original_threat   => issue.elements['original_threat'].text,
                 :family            => issue.elements['nvt/family'].text,
                 :cve               => issue.elements['nvt/cve'].text,
                 :risk_factor       => issue.elements['nvt/risk_factor'].text,
                 :cvss              => issue.elements['nvt/cvss_base'].text,
                 :report_time       => report_time
              }
          end
      rescue Exception => e
        @debug.error "Somenting went wrong. Please verify if the report scanner it was generated by #{@plugin}.\n"
        exit
      end

      return flame_issues
    end

	end

	class Html
	end
end