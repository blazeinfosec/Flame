module Owaspzap
	class Xml

		def initialize(cli, debug)
      @plugin  = 'Owaspzap'
      @author  =  {
                     :name     => 'Tiago Ferreira',
                     :contact  => 'tiago at blazeinfosec.com'
                  }
			@debug	 = debug
			@cli	   = cli
			@report  = Reportfile.new(@cli, @debug).read_file

		end

		def generate_event()
			@debug.status "Parsing \e[36m#{@plugin}\e[0m report XML file"
			flame_issues = {}
			parse = REXML::Document.new(@report)

      begin
          report_time  = parse.elements["//OWASPZAPReport"].attributes['generated']
          flame_issues = parse.elements.collect("//site/alerts/alertitem") do |issue|  
              {
                :name                 =>  issue.elements['alert'].text,
                :affected_point       =>  issue.elements['uri'].text,
                :description          =>  issue.elements['desc'].text,
                :fix_procedure        =>  issue.elements['solution'].text,
                :reference            =>  issue.elements['reference'].text,
                :severity             =>  issue.elements['riskdesc'].text,
                :_hash                =>  issue.elements['pluginid'].text,
                :report_time          =>  report_time
              }
          end
      rescue Exception => e
        @debug.error "Somenting went wrong. Please verify if the report scanner it was generated by #{@plugin}.\n"
        exit
      end

      return flame_issues
    end

	end

	class Html
	end
end